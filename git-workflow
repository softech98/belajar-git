Git Workflows 


1. Alumni Subversion
Ciri khas : 
- semua commit dicampur di trunk
- commit per online, bukan per task
- branch cuma untuk maintenance rilis

Cara kerja
git clone
hack hack hack
git commit -am "log message"
git pull 
resolve conflicts
git push

Outcome : 
- commit gak jelas juntrungannya
- tiap commit tidak bisa diapply sebagai patch yang solid
- merge commit di mana2


2. Git Zealot
Ciri khas : 
- commit per task
- bikin branch even untuk ngerjain 1 commit doang
- rebase melulu

Cara kerja : 
Clone dulu project yang mau dikerjakan
git clone myrepo
git checkout -b topic-branch
hack hack hack
git add -i
pilih hunk yang mau distage
commit 
git push origin topic-branch
Jangan gunakan master untuk kerja, master hanya untuk track upstream. 


Prepare release
checkout master
remote add upstream
fetch upstream
merge master upstream/master
checkout topic-branch 
pilih : 
 - rebase master (awas intermediate commit juga harus ditest)
 - checkout master, merge topic-branch (jadi ada merge commit) -> preferred seperti katanya nvie. 
   http://nvie.com/posts/a-successful-git-branching-model/
resolve conflicts
- commit

Send pull request
git format-patch
send untuk review/pull request


Outcome : 
- clean, linear history
- patch bisa diapply secara clean
- tiap commit jelas urusannya
- butuh waktu lama untuk pilih2 hunk
